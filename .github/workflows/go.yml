name: Go

on:
  push:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - '.golangci.yml'
      - '.github/workflows/go.yml'
  pull_request:
    paths:
      - '**.go'
      - 'go.mod'
      - '.golangci.yml'
      - '.github/workflows/go.yml'

env:
  GOPROXY: "https://proxy.golang.org"

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: --timeout=30m
      - name: Check Go module tidiness
        shell: bash
        run: |
          go mod tidy
          STATUS=$(git status --porcelain go.mod go.sum)
          if [ ! -z "$STATUS" ]; then
            echo "Running go mod tidy modified go.mod and/or go.sum"
            exit 1
          fi
      - name: Check code format
        shell: bash
        run: |
          go install mvdan.cc/gofumpt@latest
          go install github.com/rinchsan/gosimports/cmd/gosimports@latest
          if [ $(gofumpt -extra -l . | wc -l) != 0 ]; then
            echo 'Code not formated'
            exit 1
          fi
          if [ $(gosimports -local go.chensl.me -l . | wc -l) != 0 ]; then
            echo 'Code not formated'
            exit 1
          fi


  test:
    name: Test
    strategy:
      matrix:
        # go-version: [ 1.19.x, 1.20.x ]
        go-version: [ 1.20.x ]
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: go run github.com/onsi/ginkgo/v2/ginkgo -r --randomize-all --randomize-suites --fail-on-pending --keep-going --race --trace --timeout=30m
